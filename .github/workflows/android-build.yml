name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'microsoft'
        java-version: '11'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
        
    - name: Setup Workload
      run: dotnet workload install android
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Debug APK first
      run: dotnet build WoWonder/WoWonder.csproj -c Debug -f net8.0-android
        
    - name: Build Release APK
      run: |
        Write-Host "Starting Release Build..."
        # Create dummy keystore for signing if needed
        Write-Host "Creating dummy keystore for CI build"
        $keystoreDir = "WoWonder/KeyApk"
        if (!(Test-Path $keystoreDir)) { New-Item -ItemType Directory -Path $keystoreDir -Force }
        
        # Create a dummy keystore for CI
        keytool -genkeypair -v -keystore "WoWonder/KeyApk/WoWonder.keystore" -alias WoWonder -keyalg RSA -keysize 2048 -validity 10000 -storepass aaaaaaaa -keypass aaaaaaaa -dname "CN=CI Build,O=CI,L=CI,S=CI,C=US"
        
        # Set explicit output path in the current directory structure
        $outputPath = "build-output"
        New-Item -ItemType Directory -Path $outputPath -Force
        
        # Build directly to specified folder with simplified parameters
        dotnet publish WoWonder/WoWonder.csproj -c Release -f net8.0-android `
          -o $outputPath `
          /p:AndroidBuildApplicationPackage=true `
          /p:AndroidPackageFormat=apk `
          /p:EmbedAssembliesIntoApk=true
        
        Write-Host "Release Build Completed"
        
    - name: Detailed Directory Search
      run: |
        Write-Host "Performing detailed search for APK files..."
        
        # Show all directories in the workspace
        Write-Host "All directories in workspace:"
        Get-ChildItem -Directory -Path . -Recurse -Depth 2 | Select-Object -ExpandProperty FullName
        
        # Search for APK files with full details
        $apkFiles = Get-ChildItem -Path . -Recurse -Include "*.apk" -ErrorAction SilentlyContinue
        
        if ($apkFiles -and $apkFiles.Count -gt 0) {
            Write-Host "Found $($apkFiles.Count) APK files:"
            $apkFiles | ForEach-Object { 
                Write-Host "- $($_.FullName)"
                Write-Host "  Size: $($_.Length) bytes"
                Write-Host "  Created: $($_.CreationTime)"
            }
            
            # Copy all APKs to a central location for easier upload
            $collectDir = "collected-apks"
            New-Item -ItemType Directory -Path $collectDir -Force
            $apkFiles | ForEach-Object {
                $destFile = Join-Path -Path $collectDir -ChildPath $_.Name
                Copy-Item -Path $_.FullName -Destination $destFile
                Write-Host "Copied to: $destFile"
            }
        } else {
            Write-Host "No APK files found in the workspace!"
            
            # Search for build output files as a fallback
            Write-Host "Searching for any build output files..."
            Get-ChildItem -Path . -Include "*.dll","*.exe" -Recurse -Depth 3 -ErrorAction SilentlyContinue | 
                Select-Object -First 10 | ForEach-Object {
                    Write-Host "Build artifact: $($_.FullName)"
                }
        }
    
    - name: Upload from collected location
      uses: actions/upload-artifact@v3
      with:
        name: android-apks
        path: collected-apks
        if-no-files-found: warn
        
    - name: Upload from output directory
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: build-output
        if-no-files-found: warn
        
    - name: Upload any APK found anywhere
      uses: actions/upload-artifact@v3
      with:
        name: all-apk-files
        path: |
          **/*.apk
        if-no-files-found: warn
