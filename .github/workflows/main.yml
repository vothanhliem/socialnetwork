# Tên của workflow (hiển thị trên tab Actions)
name: Build Xamarin App

# Định nghĩa sự kiện kích hoạt workflow
# Ví dụ: Chạy mỗi khi có push lên nhánh 'main'
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Định nghĩa các công việc (jobs) sẽ chạy
jobs:
  # --- Công việc build cho Android ---
  build_android:
    # Chọn hệ điều hành cho máy ảo chạy job này
    runs-on: windows-latest # Hoặc ubuntu-latest

    steps:
      # Bước 1: Checkout code từ repository về máy ảo
      - name: Checkout code
        uses: actions/checkout@v4 # Sử dụng action có sẵn của GitHub

      # Bước 2: Cài đặt Java (cần cho Android SDK)
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft' # Hoặc 'temurin', 'zulu', etc.
          java-version: '11' # Chọn phiên bản JDK phù hợp với dự án Xamarin của bạn

      # Bước 3: Cài đặt .NET SDK (Nếu cần phiên bản cụ thể, nếu không máy ảo thường có sẵn)
      # - name: Setup .NET SDK
      #   uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: '6.0.x' # Thay bằng phiên bản .NET bạn cần
      
      # *** BƯỚC THÊM VÀO: Thiết lập MSBuild ***
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2 # Kiểm tra phiên bản mới nhất nếu cần

      # Bước 4: Khôi phục các gói NuGet (Đảm bảo đúng tên file .sln)
      - name: Restore NuGet packages
        run: nuget restore "WoWonder.sln" # Giả sử đây là file solution gốc của bạn

      # Debugging step: List directory structure
      - name: List directory structure
        shell: pwsh
        run: |
          Write-Host "Listing root directory:"
          Get-ChildItem "${{ github.workspace }}"
          if (Test-Path "${{ github.workspace }}/Script") {
            Write-Host "Listing Script directory:"
            Get-ChildItem "${{ github.workspace }}/Script"
          } else {
            Write-Host "Script directory does not exist."
          }
          if (Test-Path "${{ github.workspace }}/WoWonder") {
            Write-Host "Listing WoWonder directory:"
            Get-ChildItem "${{ github.workspace }}/WoWonder"
          } else {
            Write-Host "WoWonder directory does not exist."
          }

      # Debugging step: List all files recursively to locate WoWonder.csproj
      - name: Locate WoWonder.csproj
        shell: pwsh
        run: |
          Write-Host "Listing all files recursively to locate WoWonder.csproj:"
          Get-ChildItem -Path "${{ github.workspace }}" -Recurse -Filter "WoWonder.csproj" -File | ForEach-Object { Write-Host $_.FullName } 
          if (-not (Get-ChildItem -Path "${{ github.workspace }}" -Recurse -Filter "WoWonder.csproj" -File)) {
            Write-Host "WoWonder.csproj not found."
          }

      # Bước 5: Build dự án Android
      - name: Build Android project
        shell: pwsh
        run: |
          if (Test-Path "${{ github.workspace }}/WoWonder/WoWonder.csproj") {
            Write-Host "Building WoWonder Android project..."
            msbuild /p:Configuration=Release /p:Platform="Any CPU" /t:PackageForAndroid "${{ github.workspace }}/WoWonder/WoWonder.csproj"
          } else {
            Write-Host "WoWonder.csproj not found. Skipping build."
          }

      # Debugging step: Verify APK generation
      - name: Verify APK generation
        shell: pwsh
        run: |
          if (Test-Path "${{ github.workspace }}/WoWonder/bin/Release/net8.0-android") {
            Write-Host "Listing contents of WoWonder/bin/Release/net8.0-android:"
            Get-ChildItem "${{ github.workspace }}/WoWonder/bin/Release/net8.0-android"
          } else {
            Write-Host "WoWonder/bin/Release/net8.0-android directory does not exist."
          }

      # Bước 6: Upload Artifact (Đảm bảo path khớp với output của target đã chọn)
      - name: Upload Android Artifact
        shell: pwsh
        run: |
          if (Test-Path "${{ github.workspace }}/WoWonder/bin/Release/net8.0-android/*.apk") {
            Write-Host "Uploading APK..."
            # Upload logic here
          } else {
            Write-Host "No APK found to upload."
          }

